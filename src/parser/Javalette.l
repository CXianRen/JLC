/* -*- c++ -*- File generated by the BNF Converter (bnfc 2.9.4). */

/* Lexer definition for use with FLex */

%option noyywrap noinput nounput
%option reentrant bison-bridge bison-locations

%{
#include "Absyn.H"
#include "Bison.H"

#define initialize_lexer javalette__initialize_lexer

static void update_loc(YYLTYPE* loc, char* text)
{
  loc->first_line = loc->last_line;
  loc->first_column = loc->last_column;
  int i = 0;
  for (; text[i] != '\0'; ++i) {
      if (text[i] == '\n') {
          ++loc->last_line;
          loc->last_column = 0;
      } else {
          ++loc->last_column;
      }
  }
}
#define YY_USER_ACTION update_loc(yylloc, yytext);

%}

LETTER [a-zA-Z]
CAPITAL [A-Z]
SMALL [a-z]
DIGIT [0-9]
IDENT [a-zA-Z0-9'_]
%START CHAR CHARESC CHAREND STRING ESCAPED COMMENT

%%  /* Rules. */

<INITIAL>";"      	 return _SEMI;
<INITIAL>"*"      	 return _STAR;
<INITIAL>"{"      	 return _LBRACE;
<INITIAL>"}"      	 return _RBRACE;
<INITIAL>"("      	 return _LPAREN;
<INITIAL>")"      	 return _RPAREN;
<INITIAL>","      	 return _COMMA;
<INITIAL>"[]"      	 return _EMPTYBRACK;
<INITIAL>"boolean"      	 return _KW_boolean;
<INITIAL>"class"      	 return _KW_class;
<INITIAL>"double"      	 return _KW_double;
<INITIAL>"enum"      	 return _KW_enum;
<INITIAL>"extends"      	 return _KW_extends;
<INITIAL>"int"      	 return _KW_int;
<INITIAL>"struct"      	 return _KW_struct;
<INITIAL>"typedef"      	 return _KW_typedef;
<INITIAL>"void"      	 return _KW_void;

<INITIAL>"#"[^\n]* /* skip */; /* BNFC: comment "#" */
<INITIAL>"//"[^\n]* /* skip */; /* BNFC: comment "//" */
<INITIAL>"/*" BEGIN COMMENT;
<COMMENT>"*/" BEGIN INITIAL;
<COMMENT>.    /* skip */;
<COMMENT>[\n] /* skip */;

<INITIAL>{LETTER}{IDENT}*      	 yylval->_string = strdup(yytext); return _IDENT_;
<INITIAL>[ \t\r\n\f]      	 /* ignore white space. */;
<INITIAL>.      	 return _ERROR_;

%%  /* Initialization code. */

yyscan_t initialize_lexer(FILE *inp)
{
  yyscan_t scanner;
  if (yylex_init_extra(NULL, &scanner)) return 0;
  if (inp) yyrestart(inp, scanner);
  return scanner;
}

