-- programs ------------------------------------------------

entrypoints Prog ;

Program.   Prog ::= [TopDef] ;

Struct.    TopDef ::= "struct" Ident SBlk ";" ;

TypeDef.   TopDef ::= "typedef" "struct" Ident "*" Ident ";" ;

TypeDefWS. TopDef ::= "typedef" "struct" Ident SBlk "*" Ident ";" ;

Enum.      TopDef ::= "enum" Ident "{"[EVal]"}" ";" ;

Class.     TopDef ::= "class" Ident CBlk ;

ClassWE.   TopDef ::= "class" Ident "extends" Ident CBlk ;

GFuncDef.  TopDef ::= FnDef ;

FuncDef.   FnDef ::= Type Ident "(" [Arg] ")" Blk ;


EnumValue. EVal ::= Ident;
separator  EVal "," ;

Argument. Arg ::= Type Ident;
separator  Arg "," ;

separator nonempty TopDef "" ;


-- Type ----------------------------------------------
Int.       Type ::= "int" ;

Doub.      Type ::= "double" ;

Bool.      Type ::= "boolean" ;

Void.      Type ::= "void" ;

ObjT.      Type ::= Ident ;

Array.     Type ::= Type BracketsOpt ;

BracketsEmpty.   BracketsOpt ::= "[]" ;
separator nonempty BracketsOpt "";

separator  Type "," ;

-- struct and class define ---------------------------------

SBlock.     SBlk ::= "{" [Memdef] "}" ;

CBlock.     CBlk ::= "{" [CMemdef] "}" ;

MemberDef.  Memdef ::= Type Ident ";" ;
separator Memdef "" ;

CVarDef.    CMemdef ::= Memdef ;
CFuncDef.   CMemdef ::= FnDef ;

separator CMemdef "" ;

-- statements ----------------------------------------------

Block.     Blk ::= "{" [Stmt] "}" ;

separator  Stmt "" ;

Empty.     Stmt ::= ";" ;

BStmt.     Stmt ::= Blk ;

-- define variable -----------------------------------------

Decl.      Stmt ::= Type [Item] ";" ;

NoInit.    Item ::= Ident ;

Init.      Item ::= Ident "=" Expr ;

separator nonempty Item "," ;


-- Expr ----------------------------------------------------


ELitInt.   Expr7 ::= Integer ;

ELitDoub.  Expr7 ::= Double ;

ELitTrue.  Expr7 ::= "true" ;

ELitFalse. Expr7 ::= "false" ;

EString.   Expr7 ::= String ;

EVar.      Expr7 ::= Ident ;


EOr.       Expr ::= Expr7 "||" Expr ;

coercions  Expr 7 ;

separator  Expr "," ;

-- comments ------------------------------------------------

comment    "#" ;

comment    "//" ;

comment    "/*" "*/" ;

